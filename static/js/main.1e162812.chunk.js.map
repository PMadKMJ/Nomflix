{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Tv/TvPresenter.js","Routes/Tv/index.js","Routes/Tv/TvContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","_templateObject","Title","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","prototype","PropTypes","string","isRequired","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","span","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","imageUrl","rating","year","id","_ref$isMovie","isMovie","Link","to","concat","Poster_Container","Poster_Title","length","substring","role","aria-label","HomePresenter_templateObject","HomePresenter","nowPlaying","upcoming","popular","error","loading","HomePresenter_Container","Helmet","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","tvApi","search","term","get","query","encodeURIComponent","top_rated","airing_today","tvDetail","tv_id","append_to_response","movieApi","movieDetail","movie_id","HomeContainer","state","data","results","this","setState","_this$state","console","log","Home_HomePresenter","React","Component","TvPresenter_templateObject","TVPresenter","TvPresenter_Container","show","original_name","first_air_date","TvContainer","componentDidMount","_callee","_ref2","_ref3","_ref4","regenerator_default","wrap","_context","prev","next","sent","_this","t0","finish","stop","TvPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","searchTerm","movieResults","tvResults","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","Fragment","tv","SearchContainer","event","preventDefault","searchByTerm","target","Search_SearchPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","StyleLink","Header_templateObject4","withRouter","pathname","location","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h2","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","p","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Router","HashRouter","Components_Header","Switch","Route","path","exact","component","Home","TV","render","Search","Detail","Redirect","from","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","Components_GlobalStyles","ReactDOM","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1e162812.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div `\n    :not(:last-child){\n        margin-bottom: 50px;\n    }\n`\nconst Title = styled.div `\n    font-size: 14px;\n    font-wight: 600;\n`\nconst Grid = styled.div `\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`\n\nconst Section = ({title,children}) => ( \n    <Container>\n        <Title> {title}</Title>\n        <Grid>{children}</Grid> \n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height:100vh;\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    font-size: 20px;\n    margin-top:10px;\n`;\n\nexport default () => <Container> Loading </Container>","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.div`\n    color: ${props => props.color};\n    font-weight: 600;\n`;\n\nconst Message = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n)\n\nMessage.prototype = {\n    text : PropTypes.string.isRequired\n}\n\nexport default Message;","import React from  \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n    font-size:12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size:cover;\n    border-radius:4px;\n    background-position: center center;\n    transition: opacity 0.2s ease-in-out;\n`;\n\nconst Rating = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n    position: relative;\n    right: -65px;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom:5px;\n    position: relative;\n    &:hover {\n        ${Image}{\n            opacity:0.3;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom:3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({imageUrl, title, rating, year, id, isMovie = false}) =>\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : null}/>\n            </ImageContainer>\n            <Title>\n                {title.length > 15 ? `${title.substring(0,15)}...` : title}\n            </Title>\n            <Year>\n                {year}\n                <Rating><span role=\"img\" aria-label=\"rating\">*</span>{\"\"}\n                {rating}/10\n                </Rating>   \n            </Year>\n        </Container>\n    </Link>\n\nPoster.propTypes = {\n    imageUrl: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div `\n    padding: 20px;\n`;\n\nconst HomePresenter = ({\n        nowPlaying,\n        upcoming,\n        popular,\n        error,\n        loading,\n    }) => loading ? <Loader></Loader> :\n        <Container > \n            <Helmet>\n                <title>Movies | Nomflix</title>\n            </Helmet>\n            {nowPlaying && nowPlaying.length > 0 && (\n                <Section title=\"Now Playing\">\n                    {nowPlaying.map(movie => (\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0,4)}\n                            isMovie={true}\n                        />\n                    ))}\n                </Section>\n            )}\n            {upcoming && upcoming.length > 0 && (\n                <Section title=\"UPcoming\">\n                    {upcoming.map(movie => (\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0,4)}\n                            isMovie={true}\n                        />\n                    ))}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Movie\">\n                    {popular.map(movie => (\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0,4)}\n                            isMovie={true}\n                        />\n                    ))}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n\n        HomePresenter.propTypes = {\n            nowPlaying: PropTypes.array,\n            upcoming: PropTypes.array,\n            popular: PropTypes.array,\n            error: PropTypes.string,\n            loading: PropTypes.bool.isRequired,\n        };\n\n        export default HomePresenter;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: \"75d9b4ea72ae6f77bddf35eee23fc1eb\",\n        language: \"en-US\",\n    }\n});\n\nexport const tvApi = {\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    }),\n    top_rated: () => api.get(\"tv/top_rated\"),\n    airing_today: () => api.get(\"tv/airing_today\"),\n    popular: () => api.get(\"tv/popular\"),\n    tvDetail: (tv_id) => api.get(`tv/${tv_id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n};\nexport const movieApi = {\n    search: (term) => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    }),\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (movie_id) => api.get(`movie/${movie_id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n};","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport {movieApi} from \"../../api\";\n\nexport default class extends React.Component{\n    state ={\n        nowPlaying : null,\n        upcoming : null,\n        popular : null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount(){\n        try {\n            const {data: {results : nowPlaying}} = await movieApi.nowPlaying();\n            const {data: {results : popular}} = await movieApi.popular();\n            const {data: {results: upcoming}} = await movieApi.upcoming();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        } catch {\n            this.setState({\n                error: \"can't find movie information\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    \n\n    render(){\n        const { nowPlaying, upcoming, popular, error, loading } =this.state;\n        console.log(this.state);\n        return <HomePresenter \n            nowPlaying={nowPlaying}\n            upcoming={upcoming}\n            popular={popular}\n            error={error}\n            loading={loading}\n        />\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div `\n    padding: 20px;\n`;\n\nconst TVPresenter = ({top_rated, airing_today, popular, error, loading}) => \n    (loading ? <Loader></Loader> : (\n        <Container>\n            {top_rated && top_rated.length > 0 && (\n                <Section title=\"Top Rated Shows\">\n                    {top_rated.map(show => (\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\n                            isMovie={false}\n                        />\n                    ))}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Shows\">\n                    {popular.map(show => (\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\n                            isMovie={false}\n                        />\n                    ))}\n                </Section>\n            )}\n            {airing_today && airing_today.length > 0 && (\n                <Section title=\"Airing Today\">\n                    {airing_today.map(show => (\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\n                            isMovie={false}\n                        />\n                    ))}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n));\n\nTVPresenter.propTypes = {\n    top_rated: PropTypes.array,\n    airing_today: PropTypes.array,\n    popular: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool,\n};\n\nexport default TVPresenter","import TvContainer from \"./TvContainer\";\n\nexport default TvContainer;","import React from \"react\";\nimport TVPresenter from \"./TvPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component{\n    state ={\n        top_rated : null,\n        airing_today : null,\n        popular : null,\n        error : null,\n        loading: true\n    };\n\n    componentDidMount = async() => {\n        try{\n            const {data :{results : top_rated}} = await tvApi.top_rated();\n            const {data :{results : popular}} = await tvApi.popular();\n            const {data :{results : airing_today}} = await tvApi.airing_today();\n            this.setState({\n                top_rated,\n                popular,\n                airing_today,\n            });\n        } catch {\n            this.setState({\n                error: \"can't find Tv information\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render(){\n        const { top_rated,\n                airing_today,\n                popular,\n                error,\n                loading } =this.state;\n        console.log(this.state);\n        return <TVPresenter\n            top_rated={top_rated}\n            airing_today={airing_today}\n            popular={popular}\n            error={error}\n            loading={loading}\n        />\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\"\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom:50px;\n    width:100%;\n`;\n\nconst Input = styled.input`\n    all:unset;\n    font-size: 28px;\n    width:100%;\n`;\n\nconst SearchPresenter = ({\n    searchTerm,\n    movieResults,\n    tvResults,\n    error,\n    loading,\n    handleSubmit,\n    updateTerm\n}) => <Container>\n    <Form onSubmit={handleSubmit}>\n        <Input placeholder=\"Search Movies or TV Shows..\" value={searchTerm} onChange={updateTerm}>\n        </Input>\n    </Form>\n    { loading ? <Loader></Loader> : <>\n        { movieResults && movieResults.length > 0 && <Section title = \"Movie Results\">\n            {movieResults.map(movie => (\n                <Poster\n                    key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0,4)}\n                        isMovie={true}\n                />\n            ))}</Section>}\n        { tvResults && tvResults.length > 0 && <Section title = \"TV Results\">\n            {tvResults.map(tv => (\n                <Poster\n                    key={tv.id}\n                        id={tv.id}\n                        imageUrl={tv.poster_path}\n                        title={tv.original_name}\n                        rating={tv.vote_average}\n                        year={tv.first_air_date && tv.first_air_date.substring(0,4)}\n                        isMovie={false}\n                />\n            ))}</Section>}\n    </> }\n    {error && <Message color=\"#e74c3c\" text={error} />}\n    {\n        tvResults && tvResults.length === 0 && movieResults && movieResults.length === 0 && (\n        <Message text=\"Nothing Found for\" color=\"#95a5a6\" />)\n    }\n</Container>;\n\nSearchPresenter.propTypes = {\n    searchTerm: PropTypes.string,\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm :PropTypes.func.isRequired\n};\n\nexport default SearchPresenter","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport {movieApi, tvApi}from \"../../api\";\n\nexport default class extends React.Component{\n    state ={\n        searchTerm: \"\",\n        movieResults: null,\n        tvResults: null,\n        loading: false,\n        error: null\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if(searchTerm !== \"\"){\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = (event) => {\n        const { target : { value } } = event;\n        this.setState({\n            searchTerm : value\n        })\n        console.log(value);\n    }\n\n    searchByTerm = async() => {\n        const {searchTerm} = this.state;\n        this.setState({loading: true});\n        try{\n            const {data: {results:movieResults}} = await movieApi.search(searchTerm);\n            const {data: {results:tvResults}} = await tvApi.search(searchTerm);\n            this.setState({movieResults, tvResults});\n        }catch{\n            this.setState({error: \"Can't find results\"});\n        }finally{\n            this.setState({loading:false});\n        }\n    }\n\n    render(){\n        const { \n            searchTerm,\n            movieResults,\n            tvResults,\n            loading,\n            error } =this.state;\n        console.log(this.state);\n        return <SearchPresenter \n            searchTerm = {searchTerm}\n            movieResults = {movieResults}\n            tvResults = {tvResults}\n            loading = {loading}\n            error = {error}\n            handleSubmit = {this.handleSubmit}\n            updateTerm={this.updateTerm}\n        />\n    }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:50px;\n    display:flex;\n    align-items:center;\n    padding: 0px 10px;\n    background-color: rgba(20, 20, 20, 0.7);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 7px rgba(0, 0, 0, 0.8);\n`\n\nconst List = styled.ul`\n    display: flex;\n    \n`\nconst Item = styled.li`\n    width: 100px;\n    height: 50px;\n    text-align:center;\n    border-bottom: 3px solid ${props => (props.current ? \"red\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`\nconst StyleLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nexport default withRouter(\n    ({location: {pathname}}) => (\n        <Header>\n            <List>\n                <Item current={pathname === \"/\"}>\n                    <StyleLink to=\"/\">Movies</StyleLink>\n                </Item>\n                <Item current={pathname === \"/tv\"}>\n                    <StyleLink to=\"/tv\">TV</StyleLink>\n                </Item>\n                <Item current={pathname === \"/search\"}>\n                <StyleLink to=\"/search\">Search</StyleLink>\n                </Item>\n            </List>\n        </Header>\n    )\n);\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\"\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: absolute;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.3;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index:1;\n    height: 100%;\n    padding: 20px;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 70%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h2`\n    font-size: 32px;\n    margin : 20px;\n`;\n\nconst ItemContainer = styled.div`\n    margin : 20px;\n`;\n\nconst Item = styled.span`\n\n`;\n\nconst Divider = styled.span`\n    margin: 0px 5px;\n`;\n\nconst Overview = styled.p`\n    margin : 10px 0px;\n    width: 50%;\n    line-height: 2;\n    opacity: 0.7;\n`;\n\nconst DetailPresenter = ({\n    error,\n    loading,\n    result,\n}) => (\n    loading ? <Loader/> : \n    <Container>\n        <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n        <Content>\n            <Cover bgImage={ result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : null}/>\n            <Data>\n                <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                <ItemContainer>\n                    <Item>{result.release_date ? result.release_date.substring(0,4) : result.first_air_date.substring(0,4)}</Item>\n                    <Divider> | </Divider>\n                    <Item>{result.runtime ? result.runtime : result.episode_run_time[0]}min</Item>\n                    <Divider> | </Divider>\n                    <Item>\n                        {result.genres && result.genres.map(\n                            (genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `)\n                        }\n                    </Item>\n                    <Divider> | </Divider>\n                    <Overview>\n                        {result.overview}\n                    </Overview>\n                </ItemContainer>\n            </Data>\n        </Content>\n    </Container>\n);\n    \n\nDetailPresenter.propTypes = {\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    result: PropTypes.object,\n};\n\nexport default DetailPresenter","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport {\n    movieApi,\n    tvApi\n} from \"../../api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props)\n        const {\n            location: {\n                pathname\n            }\n        } = props;\n        this.state = {\n            error: null,\n            loading: true,\n            result: null,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id }\n            },\n            history: {\n                push\n            },\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                ({\n                    data: result\n                } = await movieApi.movieDetail(parsedId));\n            } else {\n                ({\n                    data: result\n                } = await tvApi.tvDetail(parsedId));\n            }\n        } catch {\n            this.setState({\n                error: \"can't find anything\"\n            });\n        } finally {\n            this.setState({\n                loading: false,\n                result\n            });\n        }\n    }\n\n    render() {\n        const {\n            error,\n            loading,\n            result\n        } = this.state;\n        console.log(this.state);\n        return <DetailPresenter\n        error = {\n            error\n        }\n        loading = {\n            loading\n        }\n        result = {\n            result\n        }\n        />\n    }\n}","import React from \"react\";\nimport { HashRouter as Router,Route,Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/Tv\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n            <Header/>\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" exact component={TV} />\n                <Route path=\"/tv/popular\" render={() => <h1>popular</h1>}/>\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/tv/:id\" component={Detail}/>\n                <Route path=\"/movie/:id\" component={Detail}/>\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default GlobalStyles;\n\n","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router/>\n        <GlobalStyles/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}